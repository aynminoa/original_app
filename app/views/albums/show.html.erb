<div class="container mx-auto text-center text-base lg:text-sm w-4/5 lg:w-1/2 bg-white my-14 px-4 md:px-8 py-8 rounded-md shadow-md">

<p class="text-lg font-semibold mb-5">
  <%= @album.user.name %>さんの<%= @album.title %><%= t('.trip') %><br class="sm:hidden">（<%= @album.visited_on.strftime("%Y年%m月") %>）
</p>

<div class="sm:flex text-left mb-5">
  <p class="text-xs sm:text-sm pt-2 mr-3"><%= t('.search_with_tag') %></p>
  <%= form_with url: album_path(@album), method: :get, local: true do |form| %>
    <%= form.select("tag_id", Tag.pluck(:name, :id), { include_blank: true }, class: "border-2 border-yellow-300 rounded-md mr-2 focus:outline-none") %>
    <%= form.submit t('.search'), name: nil, class:"px-2 py-1 sm:px-3 sm:py-2 text-sm rounded-md bg-yellow-300 hover:bg-yellow-400" %>
  <% end %>
</div>

<table class="text-xs sm:text-sm">
  <thead>
    <tr>
      <th class="sm:pr-5 pb-2"><span class="border-b-2 border-yellow-300"><%= t('.spot') %></span></th>
      <th class="sm:pr-5 pb-2"><span class="border-b-2 border-yellow-300"><%= t('.category') %></span></th>
      <th class="sm:pr-12 pb-2"><span class="border-b-2 border-yellow-300"><%= t('.tag') %></span></th>
    </tr>
  </thead>

  <tbody class="border-b border-dashed text-left text-xs sm:text-sm">
    <% @spots.each do |spot| %>
      <tr class="border-b border-dashed">
        <td class="py-1">
          <%= link_to spot.name, spot_path(spot, user_id: current_user.id), class: "underline" %></td>
        <td><%= spot.category %></td>
        <td class="flex flex-col text-xs sm:text-sm">
          <% spot.tags.each do |tag| %>
          <span class="inline-block pt-1"><%= tag.name %></span>
          <% end %>
        </td>

        <td class="pl-2">
          <div id="spot_<%= spot.id %>">
          <%= render partial: 'favorites/favorite', locals: { spot: spot,
          favorite: current_user.favorites.find_by(spot_id: spot) } %>
        </div>
        </td>

        <% if @album.user == current_user %>
          <td class="px-1 sm:pl-8 pr-2">
            <%= link_to edit_spot_path(spot, album_id: @album.id) do %>
            <i class="fa-regular fa-pen-to-square fa-lg"></i>
            <% end %>
            </td>
            <td class="px-1 sm:px-2">
            <%= link_to spot_path(spot, album_id: @album.id), method: :delete, data: { confirm: 'Are you sure?' } do %>
          <i class="fa-regular fa-trash-can fa-lg"></i>
          <% end %>
          </td>
        <% end %>
      </tr>
    <% end %>
  </tbody>
</table>


<div id="map" class="h-100 w-100"><%= t('.spot_not_yet_registered') %></div>

<style>
  #map{
    min-height: 270px;
    min-width: 270px;
    background-color: #EEEEEE;
}
</style>

<script>

  let map;
  let marker = []; // マーカーを複数表示させたいので、配列化
  let infoWindow = []; // 吹き出しを複数表示させたいので、配列化
  let markerData = gon.spots; // コントローラーで定義したインスタンス変数を変数に代入

  function initMap() {
    geocoder = new google.maps.Geocoder()

    var mapLatLng = new google.maps.LatLng({lat: markerData[0]['latitude'], lng: markerData[0]['longitude']});
    map = new google.maps.Map(document.getElementById('map'), {
      center: mapLatLng, 
      zoom: 13,
      scrollwheel: true,
    });

    // 繰り返し処理でマーカーと吹き出しを複数表示させる
    for (var i = 0; i < markerData.length; i++) {
      let id = markerData[i]['id']

      // 各地点の緯度経度を算出
      markerLatLng = new google.maps.LatLng({
        lat: markerData[i]['latitude'],
        lng: markerData[i]['longitude']
      });

      // 各地点のマーカーを作成
      marker[i] = new google.maps.Marker({
        position: markerLatLng,
        map: map
      });
      
      // 各地点の吹き出しを作成
      infoWindow[i] = new google.maps.InfoWindow({
        // 吹き出しの内容
        content: `<a href='/spots/${ id }'>${ markerData[i]['name'] }</a>`
      });
      
      // マーカーにクリックイベントを追加
      markerEvent(i);
    }
    map_adjust('');
  }

  function map_adjust(){
    var latMin = 90;
    var latMax = -90;
    var lngMin = 180;
    var lngMax = -180;
    if (markerData.length === 1){
      geocoder = new google.maps.Geocoder()
        map = new google.maps.Map(document.getElementById('map'), {
          // コントローラーで定義した変数から緯度経度を呼び出し、マップの中心に表示
          center: {
            lat: gon.spot.latitude,
            lng: gon.spot.longitude
          },
        });
      }else{
        for (var i = 0; i < markerData.length; i++) {
          var thisLat = markerData[i]['latitude'];
          var thisLng = markerData[i]['longitude'];
          latMin = Math.min(latMin, thisLat);
          latMax = Math.max(latMax, thisLat);
          lngMin = Math.min(lngMin, thisLng);
          lngMax = Math.max(lngMax, thisLng);
          
          var min = new google.maps.LatLng(latMin, lngMin);
          var max = new google.maps.LatLng(latMax, lngMax);
          var latLngBounds = new google.maps.LatLngBounds(min, max);
          map.fitBounds(latLngBounds);
        }
      }
    }
  
  // マーカーをクリックしたら吹き出しを表示
  function markerEvent(i) {
    marker[i].addListener('click', function () {
      infoWindow[i].open(map, marker[i]);
    });
    
  }
</script>

<script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['SECRET_KEY'] %>&callback=initMap" async defer></script>

<% if @album.user == current_user %>
  <div class="flex flex-col mt-4 items-center w-full gap-3">
    <%= link_to t('.new_spot'), new_spot_path(album_id: @album.id), class: "w-2/3 py-2 rounded-md bg-yellow-300 hover:opacity-75" %>
    <%= link_to t('.edit_album'), edit_album_path(@album), class: "w-2/3 py-2 rounded-md bg-gray-300 hover:bg-gray-200" %> 
    <%= link_to t('.destroy_album'), album_path(@album, user_id: current_user.id), method: :delete, data: { confirm: 'Are you sure?' }, class: "w-2/3 py-2 rounded-md bg-gray-300 hover:opacity-75" %>
  </div>
  <% end %>
  <div class="mt-3">
    <i class="fa-solid fa-chevron-left"></i>
    <%= link_to t('.back'), user_path(id: @album.user_id), class: "hover:opacity-75" %>
  </div>

</div>